2023-12-20 02:38:01.719  WARN 960 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h53m42s63ms841µs600ns).
2023-12-20 10:00:21.208  WARN 960 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7h21m49s478ms661µs300ns).
2023-12-20 14:46:24.947  WARN 960 --- [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4h46m3s738ms131µs600ns).
2023-12-20 14:46:40.278  INFO 960 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 14:46:40.280  INFO 960 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-12-20 14:46:40.362  INFO 960 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-12-20 14:46:40.369  INFO 960 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-12-20 14:55:44.700  INFO 2032 --- [restartedMain] com.example.bam.BamApplication           : Starting BamApplication using Java 19.0.2 on DESKTOP-EG01FU1 with PID 2032 (D:\bam\target\classes started by 37529 in D:\bam)
2023-12-20 14:55:44.721  INFO 2032 --- [restartedMain] com.example.bam.BamApplication           : No active profile set, falling back to 1 default profile: "default"
2023-12-20 14:55:45.428  INFO 2032 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-12-20 14:55:45.428  INFO 2032 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-12-20 14:55:48.760  INFO 2032 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-12-20 14:55:48.852  INFO 2032 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 2 JPA repository interfaces.
2023-12-20 14:55:50.088  INFO 19600 --- [restartedMain] com.example.bam.BamApplication           : Starting BamApplication using Java 19.0.2 on DESKTOP-EG01FU1 with PID 19600 (D:\bam\target\classes started by 37529 in D:\bam)
2023-12-20 14:55:50.091  INFO 19600 --- [restartedMain] com.example.bam.BamApplication           : No active profile set, falling back to 1 default profile: "default"
2023-12-20 14:55:50.155  INFO 19600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-12-20 14:55:50.155  INFO 19600 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-12-20 14:55:50.268  INFO 2032 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-12-20 14:55:50.289  INFO 2032 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-12-20 14:55:50.290  INFO 2032 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.82]
2023-12-20 14:55:50.471  INFO 2032 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-12-20 14:55:50.472  INFO 2032 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 5019 ms
2023-12-20 14:55:51.093  INFO 2032 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-12-20 14:55:51.202  INFO 2032 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-12-20 14:55:51.428  INFO 19600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-12-20 14:55:51.493  INFO 19600 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
2023-12-20 14:55:51.499  INFO 2032 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-12-20 14:55:51.669  INFO 2032 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-12-20 14:55:51.911  INFO 2032 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-12-20 14:55:51.960  INFO 2032 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-12-20 14:55:52.643  INFO 19600 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-12-20 14:55:52.655  INFO 19600 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-12-20 14:55:52.656  INFO 19600 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.82]
2023-12-20 14:55:52.797  INFO 19600 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-12-20 14:55:52.798  INFO 19600 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2642 ms
2023-12-20 14:55:53.180  INFO 19600 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-12-20 14:55:53.232  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:55:53.233  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : relation "composition" does not exist, skipping
2023-12-20 14:55:53.237  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:55:53.237  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : relation "user_role" does not exist, skipping
2023-12-20 14:55:53.241  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:55:53.241  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "composition" does not exist, skipping
2023-12-20 14:55:53.254  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:55:53.254  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "user_role" does not exist, skipping
2023-12-20 14:55:53.275  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:55:53.276  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "users" does not exist, skipping
2023-12-20 14:55:53.294  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:55:53.295  WARN 2032 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : sequence "hibernate_sequence" does not exist, skipping
2023-12-20 14:55:53.387  INFO 19600 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-12-20 14:55:53.554  INFO 2032 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-12-20 14:55:53.570  INFO 2032 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 14:55:53.598  INFO 19600 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-12-20 14:55:53.787  INFO 19600 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-12-20 14:55:54.018  INFO 19600 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-12-20 14:55:54.071  INFO 19600 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-12-20 14:55:54.784  WARN 2032 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-12-20 14:55:55.337  INFO 19600 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-12-20 14:55:55.347  INFO 19600 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 14:55:56.046  WARN 19600 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-12-20 14:55:57.276  INFO 2032 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@350be3c6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@32ba16b1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c8f0b95, org.springframework.security.web.header.HeaderWriterFilter@771c3b07, org.springframework.security.web.authentication.logout.LogoutFilter@268fb542, com.example.bam.configuration.JWTTokenFilter@405d02d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35e5a5e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ed67fd5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@213f598b, org.springframework.security.web.session.SessionManagementFilter@3bd9485c, org.springframework.security.web.access.ExceptionTranslationFilter@28bf821, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4574536d]
2023-12-20 14:55:57.368  INFO 2032 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-12-20 14:55:57.441  INFO 2032 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-12-20 14:55:57.462  INFO 2032 --- [restartedMain] com.example.bam.BamApplication           : Started BamApplication in 15.131 seconds (JVM running for 16.757)
2023-12-20 14:55:57.855  INFO 19600 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c8b34c4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a0c5d98, org.springframework.security.web.context.SecurityContextPersistenceFilter@1b32432c, org.springframework.security.web.header.HeaderWriterFilter@372175b8, org.springframework.security.web.authentication.logout.LogoutFilter@5d3651bc, com.example.bam.configuration.JWTTokenFilter@1749f9ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f40d392, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@106b1100, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@403a229a, org.springframework.security.web.session.SessionManagementFilter@4ee70549, org.springframework.security.web.access.ExceptionTranslationFilter@4a239ce9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@41e204e3]
2023-12-20 14:55:57.914  WARN 19600 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2023-12-20 14:55:57.998  WARN 19600 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2023-12-20 14:55:58.020  INFO 19600 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 14:55:58.021  INFO 19600 --- [restartedMain] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-12-20 14:55:58.111  INFO 19600 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-12-20 14:55:58.120  INFO 19600 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-12-20 14:55:58.125  INFO 19600 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2023-12-20 14:55:58.147  INFO 19600 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-12-20 14:55:58.172 ERROR 19600 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2023-12-20 14:56:21.514  INFO 2032 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 14:56:21.514  INFO 2032 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-12-20 14:56:21.519  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:56:21.519  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : relation "composition" does not exist, skipping
2023-12-20 14:56:21.523  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:56:21.523  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : relation "user_role" does not exist, skipping
2023-12-20 14:56:21.525  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:56:21.525  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "composition" does not exist, skipping
2023-12-20 14:56:21.526  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:56:21.527  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "user_role" does not exist, skipping
2023-12-20 14:56:21.529  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:56:21.529  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "users" does not exist, skipping
2023-12-20 14:56:21.531  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:56:21.531  WARN 2032 --- [SpringApplicationShutdownHook] o.h.engine.jdbc.spi.SqlExceptionHelper   : sequence "hibernate_sequence" does not exist, skipping
2023-12-20 14:56:21.534  INFO 2032 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-12-20 14:56:21.539  INFO 2032 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2023-12-20 14:57:12.012  INFO 4552 --- [restartedMain] com.example.bam.BamApplication           : Starting BamApplication using Java 19.0.2 on DESKTOP-EG01FU1 with PID 4552 (D:\bam\target\classes started by 37529 in D:\bam)
2023-12-20 14:57:12.014  INFO 4552 --- [restartedMain] com.example.bam.BamApplication           : No active profile set, falling back to 1 default profile: "default"
2023-12-20 14:57:12.069  INFO 4552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-12-20 14:57:12.069  INFO 4552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-12-20 14:57:13.198  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-12-20 14:57:13.258  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
2023-12-20 14:57:14.191  INFO 4552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2023-12-20 14:57:14.203  INFO 4552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2023-12-20 14:57:14.204  INFO 4552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.82]
2023-12-20 14:57:14.323  INFO 4552 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2023-12-20 14:57:14.323  INFO 4552 --- [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2253 ms
2023-12-20 14:57:14.590  INFO 4552 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-12-20 14:57:14.636  INFO 4552 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2023-12-20 14:57:14.836  INFO 4552 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-12-20 14:57:14.924  INFO 4552 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-12-20 14:57:15.168  INFO 4552 --- [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-12-20 14:57:15.205  INFO 4552 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2023-12-20 14:57:15.980  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:57:15.981  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : relation "composition" does not exist, skipping
2023-12-20 14:57:15.982  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:57:15.983  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : relation "user_role" does not exist, skipping
2023-12-20 14:57:15.984  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:57:15.984  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "composition" does not exist, skipping
2023-12-20 14:57:15.986  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:57:15.986  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "user_role" does not exist, skipping
2023-12-20 14:57:15.988  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:57:15.988  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : table "users" does not exist, skipping
2023-12-20 14:57:15.989  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Warning Code: 0, SQLState: 00000
2023-12-20 14:57:15.990  WARN 4552 --- [restartedMain] o.h.engine.jdbc.spi.SqlExceptionHelper   : sequence "hibernate_sequence" does not exist, skipping
2023-12-20 14:57:16.118  INFO 4552 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-12-20 14:57:16.129  INFO 4552 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 14:57:16.791  WARN 4552 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-12-20 14:57:18.175  INFO 4552 --- [restartedMain] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@60aa61ea, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68fb3493, org.springframework.security.web.context.SecurityContextPersistenceFilter@ec9ae58, org.springframework.security.web.header.HeaderWriterFilter@457696d6, org.springframework.security.web.authentication.logout.LogoutFilter@21ce952c, com.example.bam.configuration.JWTTokenFilter@71cb3262, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1889d0f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@191f3b8d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6cb2a204, org.springframework.security.web.session.SessionManagementFilter@3052fc9e, org.springframework.security.web.access.ExceptionTranslationFilter@72a2af0f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@516fd261]
2023-12-20 14:57:18.218  INFO 4552 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2023-12-20 14:57:18.256  INFO 4552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2023-12-20 14:57:18.269  INFO 4552 --- [restartedMain] com.example.bam.BamApplication           : Started BamApplication in 6.846 seconds (JVM running for 7.735)
2023-12-20 14:57:45.434  INFO 4552 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-12-20 14:57:45.434  INFO 4552 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2023-12-20 14:57:45.437  INFO 4552 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
2023-12-20 14:57:45.826  INFO 4552 --- [http-nio-8080-exec-2] com.example.bam.service.UserService      : Save new com.example.bam.entity.User@26a8ab96
2023-12-20 14:57:56.852  INFO 4552 --- [http-nio-8080-exec-3] com.example.bam.service.UserService      : Save new com.example.bam.entity.User@67f54f71
2023-12-20 14:58:03.110  INFO 4552 --- [http-nio-8080-exec-4] com.example.bam.service.UserService      : Save new com.example.bam.entity.User@1bff8a81
2023-12-20 14:58:35.940  WARN 4552 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.example.bam.entity.User.compositions, could not initialize proxy - no Session; nested exception is com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: com.example.bam.entity.User.compositions, could not initialize proxy - no Session (through reference chain: com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"])]
2023-12-20 15:03:09.687  WARN 4552 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"]->org.hibernate.collection.internal.PersistentBag[0]->com.example.bam.entity.Composition["notes"])]
2023-12-20 15:06:20.471  WARN 4552 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'song' is not present]
2023-12-20 15:06:27.241  WARN 4552 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.example.bam.entity.User.compositions, could not initialize proxy - no Session; nested exception is com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: com.example.bam.entity.User.compositions, could not initialize proxy - no Session (through reference chain: com.example.bam.entity.Composition["author"]->com.example.bam.entity.User["compositions"])]
2023-12-20 15:08:20.535  INFO 4552 --- [http-nio-8080-exec-4] com.example.bam.service.UserService      : Save new com.example.bam.entity.User@51a6e90c
2023-12-20 15:11:41.370  INFO 4552 --- [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2023-12-20 15:11:41.371  INFO 4552 --- [SpringApplicationShutdownHook] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2023-12-20 15:11:41.451  INFO 4552 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2023-12-20 15:11:41.456  INFO 4552 --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
